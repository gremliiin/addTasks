{"version":3,"sources":["components/modalWindow/modalWindow.module.css","App.module.css","serviceWorker.js","components/redux/tasks-reducer.js","components/redux/modalWindow-reducer.js","components/redux/store.js","components/modalWindow/modalWindow.js","components/modalWindow/modalWindowContainer.js","components/tasks/task/task.js","components/tasks/tasks.js","components/tasks/tasksContainer.js","App.js","index.js","components/tasks/task/task.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","localStorage","getItem","setItem","JSON","stringify","initialState","parse","console","log","tasksReducer","state","action","saveLocal","data","stateCopy","type","index","indexOf","task","splice","push","id","taskName","length","status","content","changeStateModalWindowAC","bool","modalWindowReducer","newModalWindow","substring","reducers","combineReducers","tasks","modalWindow","store","createStore","ModalWindow","props","className","s","overflow","header","header__button","onClick","cancel","body","body__title","body__name","value","onChange","e","target","modalWindowChangeContent","body_error","footer","footer__cancel","disabled","footer__submit","addTask","ModalWindowContainer","connect","dispatch","modalWindowChangeContentAC","Task","task__container","number","task__name","task__delete","deleteTask","Tasks","window__tasks","window__tasks_container","map","key","TasksContainer","deleteTaskAC","App","app","container","window__create","window__create_add","window__create_plus","this","openModalWindow","React","Component","ContainerApp","rerenderEntireTree","ReactDOM","render","StrictMode","document","getElementById","getState","subscribe","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0862a908.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overflow\":\"modalWindow_overflow__2wvfs\",\"window\":\"modalWindow_window__JQr5c\",\"header\":\"modalWindow_header__3s3Q5\",\"header__button\":\"modalWindow_header__button__3h0C8\",\"body\":\"modalWindow_body__b9idO\",\"body__title\":\"modalWindow_body__title__1p8PF\",\"body__name\":\"modalWindow_body__name___XZBn\",\"body_error\":\"modalWindow_body_error__p-84T\",\"footer\":\"modalWindow_footer__3qoBC\",\"footer__cancel\":\"modalWindow_footer__cancel__10Klh\",\"footer__submit\":\"modalWindow_footer__submit__12y-P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2SDA7\",\"window\":\"App_window__FcFWZ\",\"window__create\":\"App_window__create__36zQT\",\"window__create_add\":\"App_window__create_add__1h9xK\",\"window__create_plus\":\"App_window__create_plus__3SHtR\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const DELETE_TASK = 'DELETE-TASK';\r\nconst ADD_TASK = 'ADD-TASK';\r\n\r\nif(localStorage.getItem('state') === null) {\r\n    localStorage.setItem('state', JSON.stringify([]));\r\n}\r\n\r\n\r\nlet initialState = JSON.parse(localStorage.getItem('state'));\r\nconsole.log(initialState);\r\n\r\nexport const tasksReducer = (state = initialState, action) => {\r\n\r\n    let saveLocal = (data) => {\r\n        localStorage.setItem('state', JSON.stringify(data));\r\n        data = JSON.parse(localStorage.getItem('state'));\r\n        return data;\r\n    };\r\n\r\n    let stateCopy = [...state];\r\n\r\n\r\n    switch (action.type) {\r\n        case DELETE_TASK:\r\n             let index = stateCopy.indexOf(action.task);\r\n            stateCopy.splice(index, 1);\r\n            stateCopy = saveLocal(stateCopy);\r\n            return stateCopy;\r\n        case ADD_TASK:\r\n            stateCopy.push({id: '', taskName: action.taskName});\r\n            stateCopy[(stateCopy.length - 1)].id = (stateCopy.indexOf((stateCopy[(stateCopy.length - 1)])) + 1);\r\n            stateCopy = saveLocal(stateCopy);\r\n            return stateCopy;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport const deleteTaskAC = (task) => ({type: DELETE_TASK, task: task});\r\nexport const addTaskAC = (taskName) => ({type: ADD_TASK, taskName: taskName});\r\n\r\n\r\n\r\n\r\n\r\nexport default tasksReducer;","const OPEN_MODAL_WINDOW = 'OPEN-MODAL-WINDOW';\r\nconst MODAL_WINDOW_CHANGE_CONTENT = 'MODAL-WINDOW-CHANGE-CONTENT';\r\n\r\n\r\nlet initialState = {\r\n    status: false,\r\n    content: '',\r\n};\r\n\r\nconst modalWindowReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case OPEN_MODAL_WINDOW:\r\n            let newModalWindow = action.bool;\r\n            return {\r\n                ...state,\r\n                status: newModalWindow,\r\n            };\r\n\r\n        case MODAL_WINDOW_CHANGE_CONTENT:\r\n            return{\r\n                ...state,\r\n                content: action.content.length > 35 ?\r\n                    action.content.substring(0, action.content.length - 1) :\r\n                    action.content,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const changeStateModalWindowAC = (bool) => ({type: OPEN_MODAL_WINDOW, bool: bool});\r\nexport const modalWindowChangeContentAC = (content) => ({type: MODAL_WINDOW_CHANGE_CONTENT, content: content});\r\n\r\n\r\nexport default modalWindowReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport {tasksReducer} from \"./tasks-reducer\";\r\nimport modalWindowReducer from \"./modalWindow-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    tasks: tasksReducer,\r\n    modalWindow: modalWindowReducer,\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\nexport default store;","import React from \"react\";\r\nimport s from './modalWindow.module.css';\r\n\r\n\r\nlet ModalWindow = (props) => {\r\n        return (\r\n            <div className={s.overflow}>\r\n                <div className={s.window}>\r\n                    <div className={s.header}>\r\n                        <button className={s.header__button}\r\n                                onClick={props.cancel}\r\n                        >\r\n                            <p>+</p>\r\n                        </button>\r\n                    </div>\r\n                    <div className={s.body}>\r\n                        <h3 className={s.body__title}>Enter task</h3>\r\n                        <input className={s.body__name}\r\n                               value={props.content}\r\n                               onChange={e => {\r\n                                   let content = e.target.value;\r\n                                   props.modalWindowChangeContent(content);\r\n                               }}\r\n                        />\r\n                    </div>\r\n                    {props.content === '' ?\r\n                        <div className={s.body_error}>\r\n                            <p>Поле не может быть пустым</p>\r\n                        </div> : <div className={s.body_error}></div>\r\n                    }\r\n\r\n                    {\r\n                        props.content.length === 35 ? <div className={s.body_error}>\r\n                            <p>Максимальная допустимая длина - 35 символов</p>\r\n                        </div> : <div className={s.body_error}></div>\r\n                    }\r\n                    <div className={s.footer}>\r\n                        <button className={s.footer__cancel}\r\n                                onClick={props.cancel}\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                        <button disabled={\r\n                            props.content === '' ? 'disabled' : null\r\n                        } className={s.footer__submit}\r\n                                onClick={() => {\r\n                                    props.addTask(props.content);\r\n                                    props.cancel();\r\n                                    props.modalWindowChangeContent('');\r\n                                }}\r\n                        >\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default ModalWindow;","import React from \"react\";\r\nimport {changeStateModalWindowAC, modalWindowChangeContentAC} from \"../redux/modalWindow-reducer\";\r\nimport {addTaskAC} from \"../redux/tasks-reducer\";\r\nimport ModalWindow from \"./modalWindow\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        content: state.modalWindow.content,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        cancel: () => {\r\n            let action = changeStateModalWindowAC(false);\r\n            dispatch(action);\r\n        },\r\n\r\n        modalWindowChangeContent: (content) => {\r\n            let action = modalWindowChangeContentAC(content);\r\n            dispatch(action);\r\n        },\r\n\r\n        addTask: (content) => {\r\n            let action = addTaskAC(content);\r\n            dispatch(action);\r\n        },\r\n    }\r\n};\r\n\r\nconst ModalWindowContainer = connect(mapStateToProps, mapDispatchToProps)(ModalWindow);\r\n\r\nexport default ModalWindowContainer;","import React from \"react\";\r\nimport s from \"./task.module.css\";\r\n\r\n\r\nlet Task = (props) => {\r\n\r\n    return(\r\n        <li className={s.task__container}>\r\n            <p className={s.number}>{props.index}</p>\r\n            <p className={s.task__name}>{props.task.taskName}</p>\r\n            <button className={s.task__delete}\r\n                    onClick={() => {\r\n                        props.deleteTask(props.task);\r\n                    }}\r\n            />\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Task;","import React from \"react\";\r\nimport s from \"../../App.module.css\";\r\nimport Task from \"./task/task\";\r\n\r\n\r\nconst Tasks = (props) => {\r\n\r\n    return (\r\n        <div className={s.window__tasks}>\r\n            <ul className={s.window__tasks_container}>\r\n                {\r\n                    props.state.tasks.map(task => <Task\r\n                        key={task.id}\r\n                        task={task}\r\n                        deleteTask={props.deleteTask}\r\n                        index={(props.state.tasks.indexOf(task) + 1)}\r\n                    />)\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Tasks;","import React from \"react\";\r\nimport {deleteTaskAC} from \"../redux/tasks-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Tasks from \"./tasks\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n      state: state,\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      deleteTask: (task) => {\r\n          dispatch(deleteTaskAC(task));\r\n      },\r\n  }\r\n};\r\n\r\nlet TasksContainer = connect(mapStateToProps, mapDispatchToProps)(Tasks);\r\n\r\nexport default TasksContainer;","import React from 'react';\nimport s from './App.module.css'\nimport {changeStateModalWindowAC} from \"./components/redux/modalWindow-reducer\";\nimport ModalWindowContainer from \"./components/modalWindow/modalWindowContainer\";\nimport TasksContainer from \"./components/tasks/tasksContainer\";\nimport {connect} from \"react-redux\";\n\nclass App extends React.Component {\n\n\n    render() {\n        return (\n                <div className={s.app}>\n                    <div className={s.container}>\n                        <div className={s.window}>\n                            <div className={s.window__create}>\n                                <h3 className={s.window__create_add}>Добавьте задачу нажав на</h3>\n                                <button className={s.window__create_plus}\n                                        onClick={this.props.openModalWindow}>+\n                                </button>\n                                {this.props.status && <ModalWindowContainer/>}\n                            </div>\n                                  <TasksContainer/>\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n};\n\nlet mapStateToProps = (state) => {\n\n    return {\n        status: state.modalWindow.status,\n        state: state,\n        tasks: state.tasks,\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        openModalWindow: () => {\n            let action = changeStateModalWindowAC(true);\n            dispatch(action);\n        },\n    }\n};\n\nconst ContainerApp = connect(mapStateToProps, mapDispatchToProps)(App);\n\nexport default ContainerApp;\n\n","import ReactDOM from \"react-dom\";\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport React from \"react\";\nimport store from './components/redux/store';\nimport {Provider} from \"react-redux\";\nimport ContainerApp from \"./App\";\n\nlet rerenderEntireTree = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <Provider store={store}>\n                <ContainerApp />\n            </Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n};\n\n\nrerenderEntireTree(store.getState());\n\nstore.subscribe(() => {\n    rerenderEntireTree();\n});\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task__container\":\"task_task__container__2TO1k\",\"task__delete\":\"task_task__delete__DYkBf\",\"number\":\"task_number__1Qy6g\",\"task__name\":\"task_task__name__3yWdI\"};"],"sourceRoot":""}